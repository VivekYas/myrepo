import boto3

def lambda_handler(event, context):
    ec2 = boto3.client('ec2')

    # Get all EBS snapshots
    response = ec2.describe_snapshots(OwnerIds=['self'])

    # Get all active EC2 instance IDs
    instances_response = ec2.describe_instances(Filters=[{'Name': 'instance-state-name', 'Values': ['running']}])
    active_instance_ids = set()

    for reservation in instances_response['Reservations']:
        for instance in reservation['Instances']:
            active_instance_ids.add(instance['InstanceId'])

    # Iterate through each snapshot and delete if it's not attached to any volume or the volume is not attached to a running instance
    for snapshot in response['Snapshots']:
        snapshot_id = snapshot['SnapshotId']
        volume_id = snapshot.get('VolumeId')

        if not volume_id:
            # Delete the snapshot if it's not attached to any volume
            ec2.delete_snapshot(SnapshotId=snapshot_id)
            print(f"Deleted EBS snapshot {snapshot_id} as it was not attached to any volume.")
        else:
            # Check if the volume still exists
            try:
                volume_response = ec2.describe_volumes(VolumeIds=[volume_id])
                if not volume_response['Volumes'][0]['Attachments']:
                    ec2.delete_snapshot(SnapshotId=snapshot_id)
                    print(f"Deleted EBS snapshot {snapshot_id} as it was taken from a volume not attached to any running instance.")
            except ec2.exceptions.ClientError as e:
                if e.response['Error']['Code'] == 'InvalidVolume.NotFound':
                    # The volume associated with the snapshot is not found (it might have been deleted)
                    ec2.delete_snapshot(SnapshotId=snapshot_id)
                    print(f"Deleted EBS snapshot {snapshot_id} as its associated volume was not found.")


Explanation:

This Python script is intended to run as an AWS Lambda function and is designed to clean up unused EBS snapshots. It utilizes the Boto3 library, which provides an interface to interact with AWS services.
The lambda_handler function is the entry point for the Lambda function. It first creates a Boto3 client for EC2. Then, it retrieves a list of all EBS snapshots owned by the current account using the describe_snapshots method.
Next, it retrieves a list of all active EC2 instances using the describe_instances method, filtering for instances in the 'running' state. It collects the IDs of these instances in a set called active_instance_ids.
The script then iterates through each snapshot. For each snapshot, it checks if it is attached to a volume (volume_id is not None). If not, it deletes the snapshot since it is not attached to any volume.
If the snapshot is attached to a volume, it checks if the volume still exists by attempting to describe it using describe_volumes. If the volume does not exist (e.g., it was deleted), the script deletes the snapshot.
Additionally, if the volume exists but is not attached to any running instance, the script deletes the snapshot.